<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN 2.0//EN"
"http://www.springframework.org/dtd/spring-beans-2.0.dtd">
<beans default-lazy-init="true">
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="com.mysql.jdbc.Driver" />
		<!-- 
		<property name="jdbcUrl" value="jdbc:mysql://localhost:3306/italk?useUnicode=true&amp;characterEncoding=gbk" />
		 -->
		 <property name="jdbcUrl" value="jdbc:mysql://203.134.242.60:23306/italk?useUnicode=true&amp;characterEncoding=gbk" />
		<property name="user" value="root" />
		<property name="password" value="root" />
		<!--连接池中保留的最小连接数。Default: 3 --> 
		<property name="minPoolSize" value="10" />
		<!--连接池中保留的最大连接数。Default: 15 --> 
		<property name="maxPoolSize" value="25" />
		<!--初始化时获取三个连接，取值应在minPoolSize与maxPoolSize之间。Default: 3 --> 
		<property name="initialPoolSize" value="10" />
		<!--最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
		<property name="maxIdleTime" value="60" />
		<!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
		<property name="acquireIncrement" value="3" />
		<!--定义在从数据库获取新连接失败后重复尝试的次数。Default: 30 --> 
		<property name="acquireRetryAttempts" value="30" />
		<!--两次连接中间隔时间，单位毫秒。Default: 1000 --> 
		<property name="acquireRetryDelay" value="1000"/>
		<!--连接关闭时默认将所有未提交的操作回滚。Default: false --> 
		<property name="autoCommitOnClose" value="false"/> 
		<!--JDBC的标准参数，用以控制数据源内加载的PreparedStatements数量。但由于预缓存的statements属于单个connection而不是整个连接池。所以设置这个参数需要考虑到多方面的因素。 
  		如果maxStatements与maxStatementsPerConnection均为0，则缓存被关闭。Default: 0-->
		<property name="maxStatements" value="0"/>
		<!--每60秒检查所有连接池中的空闲连接-->		
		<property name="idleConnectionTestPeriod" value="60" />
		<!--maxStatementsPerConnection定义了连接池内单个连接所拥有的最大缓存statements数。Default: 0  --> 
		<property name="maxStatementsPerConnection" value="0"/> 
		<!--因性能消耗大请只在需要的时候使用它。如果设为true那么在每个connection提交的时候都将校验其有效性。建议使用idleConnectionTestPeriod或automaticTestTable
		等方法来提升连接测试的性能。Default: false -->
		<property name="testConnectionOnCheckout" value="false"/>
		<!--如果设为true那么在取得连接的同时将校验连接的有效性。Default: false -->
		<property name="testConnectionOnCheckin" value="true"/>
    </bean>
    <bean id="transactionManager" 
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <bean id="sqlMapClient" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
    	<property name="dataSource" ref="dataSource"/>
        <property name="configLocation">
            <value>classpath:sql-mapping.xml</value>
        </property>
    </bean>
    <bean id="transactionInterceptor"  class="org.springframework.transaction.interceptor.TransactionInterceptor">
       <property name="transactionManager">
           <ref local="transactionManager" />
       </property>
       <property name="transactionAttributes">
           <props>
              <prop key="insert*">PROPAGATION_REQUIRED</prop>
	    	  <prop key="update*">PROPAGATION_REQUIRED</prop>
	    	  <prop key="find*">PROPAGATION_REQUIRED</prop>
	    	  <prop key="delete*">PROPAGATION_REQUIRED</prop>
	    	  <prop key="*">PROPAGATION_REQUIRED,readOnly,-Exception</prop>	
           </props>
       </property>
    </bean>
    <!-- 定义 BeanPostProcessor bean,Spring 提供实现类 BeanNameAutoProxyCreator -->
    <bean class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
		<property name="beanNames">
			<value>*Dao,*Service</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>transactionInterceptor</value>
			</list>
		</property>
    </bean>

</beans>
